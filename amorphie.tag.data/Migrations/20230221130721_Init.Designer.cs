// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.tag.data.Migrations
{
    [DbContext(typeof(TagDBContext))]
    [Migration("20230221130721_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.HasKey("Name");

                    b.ToTable("Domains");

                    b.HasData(
                        new
                        {
                            Name = "idm",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8677),
                            CreatedBy = new Guid("09cd784f-7977-439c-ac0a-73e4c1a95343"),
                            Description = "Identity Management Platform",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8685),
                            ModifiedBy = new Guid("866df866-89d2-4090-97ae-d95e9669dc41"),
                            ModifiedByBehalfOf = new Guid("e8dd17b7-bb28-4f07-8345-d1013e81fd59")
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.HasKey("Name");

                    b.HasIndex("DomainName");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Name = "user",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8717),
                            CreatedBy = new Guid("5e6bfe31-f2f4-46dd-bb31-9037a428a0b8"),
                            Description = "User repository",
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8720),
                            ModifiedBy = new Guid("a74fb812-0443-4921-bbdf-78038160aa02"),
                            ModifiedByBehalfOf = new Guid("6b046bb8-4f9d-449e-a153-a38db1b9ffcc")
                        },
                        new
                        {
                            Name = "scope",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8747),
                            CreatedBy = new Guid("e48d8120-fea8-4614-be50-3c214030443e"),
                            Description = "Scope repository",
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8749),
                            ModifiedBy = new Guid("f922be6c-c618-44b5-9cb9-145d3871e402"),
                            ModifiedByBehalfOf = new Guid("a7c12e56-ebaf-4d5f-8e04-5c2f94037126")
                        });
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntityName");

                    b.ToTable("EntityData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44704"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8806),
                            CreatedBy = new Guid("b1a3577c-6631-4b93-b027-bb36ad4cf44e"),
                            EntityName = "user",
                            Field = "firstname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8810),
                            ModifiedBy = new Guid("9e02a56e-d6d4-49e4-a7b6-fb64ee424abb"),
                            ModifiedByBehalfOf = new Guid("81a7da14-768d-436e-a811-f5ccdd9af89b")
                        },
                        new
                        {
                            Id = new Guid("207f4644-57cd-46ff-80de-004c6cd44704"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8843),
                            CreatedBy = new Guid("e9416656-b246-465d-a005-0079a2be9802"),
                            EntityName = "user",
                            Field = "lastname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8846),
                            ModifiedBy = new Guid("a7e59032-7e0a-4dfa-afc4-980c91940404"),
                            ModifiedByBehalfOf = new Guid("5a71d4e9-8b35-4dba-93fc-ccdb30fe8bb9")
                        },
                        new
                        {
                            Id = new Guid("307f4644-57cd-46ff-80de-004c6cd44704"),
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8886),
                            CreatedBy = new Guid("78b89203-56ba-435e-a930-c39093533372"),
                            EntityName = "scope",
                            Field = "title",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8889),
                            ModifiedBy = new Guid("ff7ca4d9-ecfa-464e-bc06-a8e3588197b6"),
                            ModifiedByBehalfOf = new Guid("2785a214-09ba-40fa-b022-9cc11487af66")
                        });
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.Property<Guid>("EntityDataId")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("DataPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EntityDataId", "Order");

                    b.HasIndex("TagName");

                    b.ToTable("EntityDataSource");

                    b.HasData(
                        new
                        {
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 1,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8923),
                            CreatedBy = new Guid("e2a94982-0fe3-47bf-b1e7-58fce2c49023"),
                            DataPath = "$.firstname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9124),
                            ModifiedBy = new Guid("ab082004-2175-42a9-bd7b-f1dfdbc8039f"),
                            ModifiedByBehalfOf = new Guid("42ded41a-eb56-4066-8d6a-2945bf7df743"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 2,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9161),
                            CreatedBy = new Guid("43ebd1fd-41ef-4a96-ba6d-def52f732ac8"),
                            DataPath = "$.partner-staff.fullname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9164),
                            ModifiedBy = new Guid("34692ddd-97c1-41e5-b2c2-0526557d1e36"),
                            ModifiedByBehalfOf = new Guid("1e91dfb8-6d57-4752-ba2e-8cbfb2551a0a"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 3,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9187),
                            CreatedBy = new Guid("464fc1c2-177b-4851-a05f-ccd34d841b4d"),
                            DataPath = "$.firstname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9194),
                            ModifiedBy = new Guid("321bd9f8-913a-4604-878a-48a69132bfae"),
                            ModifiedByBehalfOf = new Guid("0c41917b-d9fe-4847-a48a-ef8a74dfea00"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            EntityDataId = new Guid("207f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 1,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9215),
                            CreatedBy = new Guid("eb18b9b6-14a8-447b-b6ec-dc89cec667ae"),
                            DataPath = "$.lastname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9218),
                            ModifiedBy = new Guid("794cb834-c3ff-4450-8324-e4ba9fcfd0e4"),
                            ModifiedByBehalfOf = new Guid("7adc42a3-fbe1-4388-b09d-feb466669f6c"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            EntityDataId = new Guid("207f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 2,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9239),
                            CreatedBy = new Guid("545e15dd-b848-4049-a184-8ac7e30546fc"),
                            DataPath = "$.partner-staff.fullname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9241),
                            ModifiedBy = new Guid("cdecb868-4cac-4a7b-8778-9aba806059da"),
                            ModifiedByBehalfOf = new Guid("970e3e71-5353-44af-a32d-8678ed069775"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            EntityDataId = new Guid("207f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 3,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9269),
                            CreatedBy = new Guid("43727ab2-e7ea-421c-80ca-1c36324b2c3e"),
                            DataPath = "$.lastname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9271),
                            ModifiedBy = new Guid("29822d47-637f-4c70-946f-846035a846f6"),
                            ModifiedByBehalfOf = new Guid("854243bc-877a-4f98-9dd8-6b17fc982d00"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            EntityDataId = new Guid("307f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 1,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9474),
                            CreatedBy = new Guid("2085349a-f319-4e20-b6bb-3e8af51354f5"),
                            DataPath = "$.firstname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9476),
                            ModifiedBy = new Guid("0836c81a-a8ba-4978-b2fa-d37f8428c41b"),
                            ModifiedByBehalfOf = new Guid("a905fca1-2aa3-48a0-bfe0-3417411b0ff0"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            EntityDataId = new Guid("307f4644-57cd-46ff-80de-004c6cd44704"),
                            Order = 2,
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9494),
                            CreatedBy = new Guid("e2ae8a10-634b-4cf7-a940-555e435a6726"),
                            DataPath = "$.partner-staff.fullname",
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(9496),
                            ModifiedBy = new Guid("7c17bb31-fbbc-49bd-a759-ae4027c58422"),
                            ModifiedByBehalfOf = new Guid("4e3c28df-6bc7-4766-9b81-0110ef30143b"),
                            TagName = "loan-partner-staff"
                        });
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Name = "retail-loan",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(6969),
                            CreatedBy = new Guid("078373c5-e501-455b-a258-1e95c8222a92"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7025),
                            ModifiedBy = new Guid("b100f296-57aa-4d78-924f-3d0d174bbee7"),
                            ModifiedByBehalfOf = new Guid("3686d977-b893-4ca5-bc87-0a79d727d28d")
                        },
                        new
                        {
                            Name = "idm",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7100),
                            CreatedBy = new Guid("b37e1756-8bdf-4c97-9e3c-3e36fd35a16c"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7103),
                            ModifiedBy = new Guid("44cef650-b1b2-433b-8f77-b24deec6848c"),
                            ModifiedByBehalfOf = new Guid("ff890aec-a2ed-4d67-902c-bdc813d6de76")
                        },
                        new
                        {
                            Name = "retail-customer",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7129),
                            CreatedBy = new Guid("aa2c9c10-7eaf-45cb-ab1b-253c059d0347"),
                            CreatedDate = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7164),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7152),
                            ModifiedBy = new Guid("89581a97-2968-475a-a27d-896c327c6762"),
                            ModifiedByBehalfOf = new Guid("cb46b3b4-8e89-42da-a7fd-17bb1f584cfc"),
                            Ttl = 5,
                            Url = "http://localhost:3001/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Name = "corporate-customer",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7487),
                            CreatedBy = new Guid("60c0f456-ca67-4683-a0ce-fc0034005910"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7491),
                            ModifiedBy = new Guid("862001d5-fa24-43a5-a67e-92de55c356d6"),
                            ModifiedByBehalfOf = new Guid("337c1687-f3fc-4ee4-8204-b99cb01f7eca"),
                            Ttl = 10,
                            Url = "http://localhost:3001/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Name = "loan-partner",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7515),
                            CreatedBy = new Guid("69449ed1-528e-443b-96f0-9719cb7bbaa9"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7518),
                            ModifiedBy = new Guid("822df56c-abad-4139-966a-a0a14119b6cf"),
                            ModifiedByBehalfOf = new Guid("2ac2ddd0-00a7-4c21-a3cd-3e338fdcdcd3"),
                            Ttl = 10,
                            Url = "http://localhost:3001/cb.partner/@reference"
                        },
                        new
                        {
                            Name = "loan-partner-staff",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7784),
                            CreatedBy = new Guid("9f9141f5-ea09-4def-a595-245bc1609ca8"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7788),
                            ModifiedBy = new Guid("7511c754-846a-43ef-ba92-75500e64620e"),
                            ModifiedByBehalfOf = new Guid("809fdeda-ef3e-4aaf-8ee9-5a3ccec6a2a9"),
                            Ttl = 10,
                            Url = "http://localhost:3001/cb.partner/@partner/staff/@reference"
                        },
                        new
                        {
                            Name = "burgan-staff",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7813),
                            CreatedBy = new Guid("6a4dd506-0e16-476d-9f61-f4fa947702f0"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7815),
                            ModifiedBy = new Guid("2b0c77b3-1e6e-4f6a-b2ec-4d9e3d783347"),
                            ModifiedByBehalfOf = new Guid("ddfc11b9-2d39-4212-80f6-9d77c5c103e3"),
                            Ttl = 10,
                            Url = "http://localhost:3001/cb.staff/@reference"
                        },
                        new
                        {
                            Name = "burgan-bank-turkey",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7838),
                            CreatedBy = new Guid("82f64b26-951d-4a38-bc57-68369c33cf13"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7840),
                            ModifiedBy = new Guid("6377e925-c9cd-48b6-b1ae-a705339aa9d5"),
                            ModifiedByBehalfOf = new Guid("935c67b7-8f5a-4959-ac42-24f4d9e89cb7"),
                            Ttl = 10,
                            Url = "http://localhost:3001/cb.bankInfo"
                        });
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.Property<string>("OwnerName")
                        .HasColumnType("text");

                    b.Property<string>("TagName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.HasKey("OwnerName", "TagName");

                    b.HasIndex("TagName");

                    b.ToTable("TagRelations");

                    b.HasData(
                        new
                        {
                            OwnerName = "idm",
                            TagName = "corporate-customer",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7950),
                            CreatedBy = new Guid("cb0cacdc-0127-4fb4-9e9d-b478ded9d6cd"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(7953),
                            ModifiedBy = new Guid("7ef214cb-d730-447c-8b13-2cf41242aa18"),
                            ModifiedByBehalfOf = new Guid("90f80811-f480-4e44-aa85-3c9b6454d579")
                        },
                        new
                        {
                            OwnerName = "idm",
                            TagName = "retail-customer",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8003),
                            CreatedBy = new Guid("288d4982-0f4a-46b6-b40c-e6af5c75125b"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8006),
                            ModifiedBy = new Guid("e20371d6-a87a-4189-8214-b247859862a2"),
                            ModifiedByBehalfOf = new Guid("e50f21ff-3c55-4a10-b87e-903eac66ccba")
                        },
                        new
                        {
                            OwnerName = "idm",
                            TagName = "loan-partner",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8028),
                            CreatedBy = new Guid("bffe6012-ae82-4941-848a-989ae6b77494"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8036),
                            ModifiedBy = new Guid("f25ec2ae-acfb-4116-ac80-fc452867afe3"),
                            ModifiedByBehalfOf = new Guid("ebf519b7-b4ce-4afc-9b50-8a979a9c6cc5")
                        },
                        new
                        {
                            OwnerName = "idm",
                            TagName = "loan-partner-staff",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8058),
                            CreatedBy = new Guid("9539c527-b261-4fdf-964f-8eebbf1b803e"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8060),
                            ModifiedBy = new Guid("f7c677ac-339f-400e-ad46-caa4412a2ea6"),
                            ModifiedByBehalfOf = new Guid("19c8ee69-4ac8-419d-8b97-24ecaf85b9b0")
                        },
                        new
                        {
                            OwnerName = "idm",
                            TagName = "burgan-staff",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8266),
                            CreatedBy = new Guid("6a28afc0-6d81-427f-9428-831177f50ed4"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8269),
                            ModifiedBy = new Guid("5e71aad6-2849-4692-ad30-4c1df132018e"),
                            ModifiedByBehalfOf = new Guid("0a1c002f-8702-46c7-b38d-ee358dcf1a85")
                        },
                        new
                        {
                            OwnerName = "idm",
                            TagName = "burgan-bank-turkey",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8300),
                            CreatedBy = new Guid("4e45b261-5c0e-452f-a88b-ac0f689294c5"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8302),
                            ModifiedBy = new Guid("cdeb9b95-fc8b-46d8-b6ab-9fd84b693d6f"),
                            ModifiedByBehalfOf = new Guid("8bf516a2-d877-4d97-82db-121a3ffc9f19")
                        },
                        new
                        {
                            OwnerName = "retail-loan",
                            TagName = "retail-customer",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8620),
                            CreatedBy = new Guid("0e5ead29-de34-468c-8035-ac80a069ed9e"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8623),
                            ModifiedBy = new Guid("231e590f-ec92-4fc2-ae02-89b53a9e7ede"),
                            ModifiedByBehalfOf = new Guid("a9e67f5b-b6a0-41ae-885a-608c29bdb7c0")
                        },
                        new
                        {
                            OwnerName = "retail-loan",
                            TagName = "loan-partner",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8643),
                            CreatedBy = new Guid("59409a9e-13bc-4f38-8803-780b7652118b"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8646),
                            ModifiedBy = new Guid("51b674d3-60b0-4b7a-afe4-a0200bb7986c"),
                            ModifiedByBehalfOf = new Guid("3ee8bd67-bd8f-4bf9-b8c2-c67969e87436")
                        });
                });

            modelBuilder.Entity("View", b =>
                {
                    b.Property<string>("TagName")
                        .HasColumnType("text");

                    b.Property<string>("ViewTemplateName")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("TagName", "ViewTemplateName");

                    b.ToTable("Views");

                    b.HasData(
                        new
                        {
                            TagName = "retail-customer",
                            ViewTemplateName = "retail-customer-mini-html",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8330),
                            CreatedBy = new Guid("5ff46d80-d5db-4881-ba5d-6c285ed0becb"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8332),
                            ModifiedBy = new Guid("1762169e-e044-46af-9472-a9c9cdb34123"),
                            ModifiedByBehalfOf = new Guid("966e3a77-fc48-4a72-a190-fd65a1a482f5"),
                            Type = 0
                        },
                        new
                        {
                            TagName = "retail-customer",
                            ViewTemplateName = "retail-customer-flutter",
                            CreatedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8587),
                            CreatedBy = new Guid("c150facf-8db8-4607-be30-05624ebbee7f"),
                            ModifiedAt = new DateTime(2023, 2, 21, 13, 7, 21, 578, DateTimeKind.Utc).AddTicks(8590),
                            ModifiedBy = new Guid("c2773572-824f-4d50-89c7-d41ddc723eae"),
                            ModifiedByBehalfOf = new Guid("97ac4c25-d91e-4dd2-be6f-c6b4c6ca6d77"),
                            Type = 2
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.HasOne("Domain", "Domain")
                        .WithMany("Entities")
                        .HasForeignKey("DomainName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.HasOne("Entity", "Entity")
                        .WithMany("Data")
                        .HasForeignKey("EntityName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.HasOne("EntityData", "EntityData")
                        .WithMany("Sources")
                        .HasForeignKey("EntityDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityData");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.HasOne("Tag", "Owner")
                        .WithMany("TagsRelations")
                        .HasForeignKey("OwnerName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("View", b =>
                {
                    b.HasOne("Tag", "Tag")
                        .WithMany("Views")
                        .HasForeignKey("TagName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Domain", b =>
                {
                    b.Navigation("Entities");
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Navigation("Data");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Navigation("Sources");
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Navigation("TagsRelations");

                    b.Navigation("Views");
                });
#pragma warning restore 612, 618
        }
    }
}
