// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.tag.data.Migrations
{
    [DbContext(typeof(TagDBContext))]
    [Migration("20230605074620_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Domains");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6589),
                            CreatedBy = new Guid("e1e17432-e2f7-48a1-a72e-30dce8df4b8d"),
                            Description = "Identity Management Platform",
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6588),
                            ModifiedBy = new Guid("31b628a6-a82c-4349-957d-08569e0a4917"),
                            Name = "idm"
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("DomainId")
                        .HasColumnType("uuid");

                    b.Property<string>("DomainName")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6610),
                            CreatedBy = new Guid("6a556f5b-453f-4907-bcdc-3c7b612cd089"),
                            Description = "User repository",
                            DomainId = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6609),
                            ModifiedBy = new Guid("e234fc2a-aeb9-45ac-8cf3-434bb057713a"),
                            Name = "user"
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44710"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6626),
                            CreatedBy = new Guid("0684540b-bb98-4d3a-bd2b-bbf07ee2fe92"),
                            Description = "Scope repository",
                            DomainId = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6625),
                            ModifiedBy = new Guid("894a6d67-7891-43c5-8f56-535d3ea0a7f3"),
                            Name = "scope"
                        });
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("EntityData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6641),
                            CreatedBy = new Guid("fb43f262-d143-4cd4-940f-ad2e04aaea29"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            EntityName = "user",
                            Field = "firstname",
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6640),
                            ModifiedBy = new Guid("e0160346-79f7-4427-a62d-e1c71823e13a")
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44722"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6657),
                            CreatedBy = new Guid("ba5bd00a-1b5b-455e-bdf1-270f11f99dad"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            EntityName = "user",
                            Field = "lastname",
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6656),
                            ModifiedBy = new Guid("27ede6ed-a6b6-4f9c-a305-60e93561220d")
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44755"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6673),
                            CreatedBy = new Guid("83ae0bd3-804e-4da8-9293-4706f4b54998"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44710"),
                            EntityName = "scope",
                            Field = "title",
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6672),
                            ModifiedBy = new Guid("2dd7de92-36d3-4110-b2d0-e4e7d135cc95")
                        });
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("DataPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EntityDataId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityDataId");

                    b.HasIndex("TagId");

                    b.ToTable("EntityDataSource");

                    b.HasData(
                        new
                        {
                            Id = new Guid("228fe300-30df-4152-94a6-8acf021ea0ae"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6690),
                            CreatedBy = new Guid("1113514b-035a-4bd0-bb9f-90e39016a3b9"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6689),
                            ModifiedBy = new Guid("8dfa056f-ed38-4a58-b3cc-61f899745f29"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("9f601361-46a9-48c8-92ba-bc699973f70f"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6705),
                            CreatedBy = new Guid("707a272a-5755-4152-8db8-04aab8428c4f"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6704),
                            ModifiedBy = new Guid("3d0b5675-0d3d-4df9-af2c-e27b37159fe5"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("beda4812-87bc-4bc5-821f-106f21dcafcb"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6720),
                            CreatedBy = new Guid("caacd288-677d-439b-b01c-b73b3681245f"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6719),
                            ModifiedBy = new Guid("0670b6e6-d20d-4e6d-b195-2ba1c905cdd1"),
                            Order = 3,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("3c864600-48ce-4143-93a1-16eee0fd7f53"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6733),
                            CreatedBy = new Guid("45f4bb6f-1847-4d90-873f-f56abada4be5"),
                            DataPath = "$.lastname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6732),
                            ModifiedBy = new Guid("e5077273-3ac6-49b5-abe3-89548ed4a6f0"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("ab7bd6e3-b317-4065-a4fa-b6edc431eee9"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6745),
                            CreatedBy = new Guid("a0266be5-9b0e-4311-a122-007023b05652"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6744),
                            ModifiedBy = new Guid("9972682e-a90f-4107-ad6f-c5e918778516"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("5859ba4d-8e9f-4f21-908c-bea4bbd200bd"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6760),
                            CreatedBy = new Guid("39e39746-cc02-40d3-82b2-70b287dceb35"),
                            DataPath = "$.lastname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6759),
                            ModifiedBy = new Guid("b80d258e-5de4-4735-bd1f-d1668a621055"),
                            Order = 3,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("13d52481-346a-420f-acb2-292f59ffdb80"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6773),
                            CreatedBy = new Guid("879769ab-9549-47e5-a386-de3942397923"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6772),
                            ModifiedBy = new Guid("89150fcc-c3e3-4757-b4de-1df166824d23"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("0c458e38-018b-483d-9ae7-ff7e28a3e86f"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6787),
                            CreatedBy = new Guid("72ebc6ba-ecb7-46fe-8346-60cbfce9d4f3"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6785),
                            ModifiedBy = new Guid("8f75973e-575c-4056-b7b2-94981e9c5ac3"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        });
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6258),
                            CreatedBy = new Guid("0b4d3907-6e81-4364-9002-820a419bb6bc"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6252),
                            ModifiedBy = new Guid("b6897aad-48ef-4ec1-a326-640297e9ac4f"),
                            Name = "retail-loan"
                        },
                        new
                        {
                            Id = new Guid("5c376fd5-d29c-47c9-9b8e-f544b333f072"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6310),
                            CreatedBy = new Guid("596ef84f-ebe7-44eb-a3a1-79331dd9442a"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6309),
                            ModifiedBy = new Guid("7356ec0e-4778-4a37-be32-f35159d092cc"),
                            Name = "idm"
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6337),
                            CreatedBy = new Guid("cc183c6c-2a19-4b6c-8998-394c0e5b88ef"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6323),
                            ModifiedBy = new Guid("bca1d845-a90a-4363-8eb6-07e4b397f872"),
                            Name = "retail-customer",
                            Ttl = 5,
                            Url = "http://localhost:3000/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Id = new Guid("8a44b641-611d-4ff1-abae-97627ae931ad"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6356),
                            CreatedBy = new Guid("2e87a49c-b89c-4ab5-b43a-32deef26d336"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6356),
                            ModifiedBy = new Guid("3b98e235-a47f-49e5-b693-06927fb2a5d0"),
                            Name = "corporate-customer",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Id = new Guid("ebf9c601-fc5e-427a-ab56-7db6ebac6d2a"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6369),
                            CreatedBy = new Guid("787331ee-f6a0-4d08-b154-fe00d45f2a0c"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6368),
                            ModifiedBy = new Guid("9fd4bec5-1be8-4180-a88b-3500abab8a9f"),
                            Name = "loan-partner",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.partner/@reference"
                        },
                        new
                        {
                            Id = new Guid("e8992016-985d-40db-a3ad-760b27986a6d"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6387),
                            CreatedBy = new Guid("48c4cdd3-fc14-4818-9c28-9f62dccb2884"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6383),
                            ModifiedBy = new Guid("c29e7548-404e-44ea-a4a8-3bbd8b2b9b46"),
                            Name = "loan-partner-staff",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.partner/@partner/staff/@reference"
                        },
                        new
                        {
                            Id = new Guid("97115f58-fa2d-496c-a7d7-58815569c8c4"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6400),
                            CreatedBy = new Guid("108542de-e084-4777-ba34-412bf44bf50e"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6399),
                            ModifiedBy = new Guid("b0993c96-2142-4ea8-8465-07708d8f660f"),
                            Name = "burgan-staff",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.staff/@reference"
                        },
                        new
                        {
                            Id = new Guid("ffaea56d-632e-46c1-82d3-e7d62c39ad79"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6412),
                            CreatedBy = new Guid("1bb7a8d2-1005-47cc-97f2-e1ec755f4b2d"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6411),
                            ModifiedBy = new Guid("d6187dd7-3566-4fad-925c-594b99433ea4"),
                            Name = "burgan-bank-turkey",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.bankInfo"
                        });
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagRelations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba501004-3914-4a32-b9e5-86f25a101186"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6428),
                            CreatedBy = new Guid("c3bbab6f-7d11-4c71-b5f6-a39980722938"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6427),
                            ModifiedBy = new Guid("15b67b71-5cb1-455f-be6d-fedf6b084d5d"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "corporate-customer"
                        },
                        new
                        {
                            Id = new Guid("f04c9658-e9d5-419f-a0f7-1159b6d06b87"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6443),
                            CreatedBy = new Guid("cf4b0d4c-e51a-4254-8031-4d6dfd29d90b"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6442),
                            ModifiedBy = new Guid("597d5646-e224-4db7-b76f-768b32075c08"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("4261399f-9812-4f72-b41f-d61176b095cd"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6461),
                            CreatedBy = new Guid("aec9d7a1-9b28-4008-953f-357f1d80b319"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6460),
                            ModifiedBy = new Guid("496632b5-5321-4a09-8016-58d3e6783476"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner"
                        },
                        new
                        {
                            Id = new Guid("0187b898-9395-4e51-980a-1e88e1169843"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6477),
                            CreatedBy = new Guid("79a5cb46-445a-4517-a938-f8a9955a56e0"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6476),
                            ModifiedBy = new Guid("1623499c-19a2-4be5-84e2-88539a8e501d"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("582d005c-ff27-4679-8dc7-5c3428df8e10"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6489),
                            CreatedBy = new Guid("25dec80a-9969-4b7d-8c74-def67e954166"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6488),
                            ModifiedBy = new Guid("a824bac5-c2ad-408e-9151-193589b18922"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("1cfe2516-59d5-4eb7-bbcd-7d9f30b68bad"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6505),
                            CreatedBy = new Guid("5bb5d89f-f6c7-4067-8d98-1b6f6fde74b0"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6502),
                            ModifiedBy = new Guid("577121ec-4765-4c4d-aff0-69741666190c"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-bank-turkey"
                        },
                        new
                        {
                            Id = new Guid("4a168afc-e226-428b-a721-91236c618135"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6562),
                            CreatedBy = new Guid("30ffc872-0d56-4e3d-8ffc-c05e5fb07cfb"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6561),
                            ModifiedBy = new Guid("96fd42b2-dc68-40e8-989d-fd7eaf93e991"),
                            OwnerName = "retail-loan",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("759ed7a7-ea1a-4776-bc69-678b06e6b0c3"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6574),
                            CreatedBy = new Guid("1905d7ef-326a-4d2f-812c-faaeae73223b"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6573),
                            ModifiedBy = new Guid("a2aaa0b6-7e89-4a7c-ac6b-7a4a0b52aab7"),
                            OwnerName = "retail-loan",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            TagName = "loan-partner"
                        });
                });

            modelBuilder.Entity("View", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("ViewTemplateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("Views");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e9b1b0fa-e506-4c1e-82ba-8d8995988f1d"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6531),
                            CreatedBy = new Guid("005733b3-21ff-4425-89bf-9a4760bd0958"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6530),
                            ModifiedBy = new Guid("0364d059-546f-4bd5-b42d-0c6606d53702"),
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer",
                            Type = 1,
                            ViewTemplateName = "retail-customer-mini-html"
                        },
                        new
                        {
                            Id = new Guid("74df88e7-e038-454f-8804-4bc116d97731"),
                            CreatedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6548),
                            CreatedBy = new Guid("8b9e3b57-693f-4e0f-abe8-4d12736e71aa"),
                            ModifiedAt = new DateTime(2023, 6, 5, 7, 46, 20, 162, DateTimeKind.Utc).AddTicks(6547),
                            ModifiedBy = new Guid("ef494e6e-2486-49a4-bc7b-e92b40e637c8"),
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer",
                            Type = 2,
                            ViewTemplateName = "retail-customer-flutter"
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.HasOne("Domain", "Domain")
                        .WithMany("Entities")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.HasOne("Entity", "Entity")
                        .WithMany("Data")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.HasOne("EntityData", "EntityData")
                        .WithMany("Sources")
                        .HasForeignKey("EntityDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityData");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.HasOne("Tag", "Tag")
                        .WithMany("TagsRelations")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("View", b =>
                {
                    b.HasOne("Tag", "Tag")
                        .WithMany("Views")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Domain", b =>
                {
                    b.Navigation("Entities");
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Navigation("Data");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Navigation("Sources");
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Navigation("TagsRelations");

                    b.Navigation("Views");
                });
#pragma warning restore 612, 618
        }
    }
}
