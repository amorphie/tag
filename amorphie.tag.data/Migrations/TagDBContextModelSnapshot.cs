// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.tag.data.Migrations
{
    [DbContext(typeof(TagDBContext))]
    partial class TagDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Domains");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9922),
                            CreatedBy = new Guid("22c91f2f-7f9e-4b25-baac-0d3d415a1b0e"),
                            Description = "Identity Management Platform",
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9920),
                            ModifiedBy = new Guid("e0d281f4-91cc-435b-af9c-dad9b45ad771"),
                            Name = "idm"
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("DomainId")
                        .HasColumnType("uuid");

                    b.Property<string>("DomainName")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9976),
                            CreatedBy = new Guid("4158f9a5-b561-4373-ae85-f21c46f5f158"),
                            Description = "User repository",
                            DomainId = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9969),
                            ModifiedBy = new Guid("83dbe7e1-3eb5-4c9f-b24f-68175f6b58db"),
                            Name = "user"
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44710"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(19),
                            CreatedBy = new Guid("6b9e44f2-091e-4356-916f-d673a6104d0a"),
                            Description = "Scope repository",
                            DomainId = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(17),
                            ModifiedBy = new Guid("82beefe1-24ed-4c8a-9ca9-7d19793c3bca"),
                            Name = "scope"
                        });
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("EntityData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(56),
                            CreatedBy = new Guid("87c0fb2f-c30c-47ef-b91d-2d96858060d1"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            EntityName = "user",
                            Field = "firstname",
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(54),
                            ModifiedBy = new Guid("8cc56652-4343-4bbd-b294-c1681d39eed4")
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44722"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(97),
                            CreatedBy = new Guid("cc935829-0e9d-4584-9f00-266afe09895e"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            EntityName = "user",
                            Field = "lastname",
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(95),
                            ModifiedBy = new Guid("22b1dd79-803a-40e1-bf16-24b7e0dc44c9")
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44755"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(131),
                            CreatedBy = new Guid("02f5664f-8585-4bfe-bfbd-9b366fa0bead"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44710"),
                            EntityName = "scope",
                            Field = "title",
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(124),
                            ModifiedBy = new Guid("e01fd37b-6e07-40dd-a30f-802c1fb66420")
                        });
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("DataPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EntityDataId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityDataId");

                    b.HasIndex("TagId");

                    b.ToTable("EntityDataSource");

                    b.HasData(
                        new
                        {
                            Id = new Guid("87e2aa37-ab77-4644-83b5-add81b9c7029"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(162),
                            CreatedBy = new Guid("6eb027bd-e4c9-4850-b9bc-7a9db05f32b3"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(160),
                            ModifiedBy = new Guid("d8fa87a8-9a48-4327-987d-ca5ee760011a"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("63527c16-5a2e-4d4f-acc6-45c44da39fc6"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(196),
                            CreatedBy = new Guid("c3b21d4c-57c8-4ec2-b717-05ee9c5724b2"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(195),
                            ModifiedBy = new Guid("52a5c37f-794a-481f-9413-310481598545"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("14158929-136d-4156-9a55-1261837b9c77"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(234),
                            CreatedBy = new Guid("e07e5857-0a3c-4aa4-9e18-8acbb8a78e5b"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(226),
                            ModifiedBy = new Guid("18a4d329-1357-4115-a863-10e33016afac"),
                            Order = 3,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("87ec1b24-e55b-4226-93d7-71463ffb1dea"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(264),
                            CreatedBy = new Guid("b56f7490-42cb-4344-8969-28f1c47fb52d"),
                            DataPath = "$.lastname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(262),
                            ModifiedBy = new Guid("1cb979ab-fc81-4ec3-bed5-93e1609f0c81"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("c2012a11-43aa-497e-ab02-6c40f2362c31"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(293),
                            CreatedBy = new Guid("4bb5d7fb-6d7c-4e48-96f6-a8a1bfbcab52"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(291),
                            ModifiedBy = new Guid("254bb9f3-c498-49e4-bc14-01aaf51d3e51"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("5c16195d-aad8-4c72-b3df-6a7406e95765"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(333),
                            CreatedBy = new Guid("351e25f1-1f5f-4f65-8b0b-f1a30554971a"),
                            DataPath = "$.lastname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(331),
                            ModifiedBy = new Guid("7b2bcd59-8d7f-44a6-a1b7-ad557afb9f77"),
                            Order = 3,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("6199927c-672e-4b13-a1f6-436130c4047e"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(365),
                            CreatedBy = new Guid("ff3b6b98-a612-4d06-9bf9-0f1150a03ee9"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(363),
                            ModifiedBy = new Guid("9c44ce61-4939-471f-b85a-07a8472f343f"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("3a973a8c-3e48-4a49-9037-d6d3e0db38dd"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(397),
                            CreatedBy = new Guid("f8b81de9-356a-4fbd-82ed-02e0d99ed34c"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 575, DateTimeKind.Utc).AddTicks(394),
                            ModifiedBy = new Guid("5f12ec6b-2b2e-4123-80da-a8e6fe8bca55"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        });
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9168),
                            CreatedBy = new Guid("c9818ced-0248-49cd-a75f-1c1b172c4368"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9163),
                            ModifiedBy = new Guid("9bc8f9bd-90c6-456a-8b2a-ca40dbca4c5b"),
                            Name = "retail-loan"
                        },
                        new
                        {
                            Id = new Guid("fe00fb16-f2c2-47e6-b46d-b72b4fb5d649"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9286),
                            CreatedBy = new Guid("98ef09f0-a462-40b7-9e42-94295c622755"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9284),
                            ModifiedBy = new Guid("56150df5-67d2-4683-a8ff-7338aca205d4"),
                            Name = "idm"
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9316),
                            CreatedBy = new Guid("659f5a42-6510-4749-9a36-959ffc1aa2d8"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9314),
                            ModifiedBy = new Guid("70a1204a-2750-4280-9da2-cd3ec2bdb467"),
                            Name = "retail-customer",
                            Ttl = 5,
                            Url = "http://localhost:3000/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Id = new Guid("2c05eda0-37af-406d-aa20-d3cddbbc5559"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9370),
                            CreatedBy = new Guid("f2ac04d3-5d6a-4c2a-98bb-77f9df392e8f"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9367),
                            ModifiedBy = new Guid("64daeee6-bb69-45a3-8a7f-6919b4b9bfee"),
                            Name = "corporate-customer",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Id = new Guid("785c4491-ec21-4803-ad41-af68ffd48c08"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9398),
                            CreatedBy = new Guid("2896c170-83ac-4741-9efb-9bda3862da34"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9396),
                            ModifiedBy = new Guid("c5d90686-90eb-4ab3-a635-2ca5ec6d7fcc"),
                            Name = "loan-partner",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.partner/@reference"
                        },
                        new
                        {
                            Id = new Guid("8989d945-6e7c-4b6b-97e8-aea0f154b9ca"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9434),
                            CreatedBy = new Guid("ed21daa1-167d-4a74-86cb-c8ed32f8ec8f"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9433),
                            ModifiedBy = new Guid("94901b0f-78bd-4718-99f0-b51adecc5859"),
                            Name = "loan-partner-staff",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.partner/@partner/staff/@reference"
                        },
                        new
                        {
                            Id = new Guid("6364ea95-7503-4213-906f-b9b33ac2125e"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9469),
                            CreatedBy = new Guid("0884c075-a3a3-4ecd-b3cf-3b3ceec25507"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9467),
                            ModifiedBy = new Guid("2c9159a5-b808-41ba-8de9-433510db1896"),
                            Name = "burgan-staff",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.staff/@reference"
                        },
                        new
                        {
                            Id = new Guid("ecbe79d5-3ce6-47b8-868a-a776c0c01785"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9497),
                            CreatedBy = new Guid("1ad3b69d-fb78-4b8f-8473-645483860ad4"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9495),
                            ModifiedBy = new Guid("fd9b1f9e-42fb-4da0-a4fd-b942185d4a79"),
                            Name = "burgan-bank-turkey",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.bankInfo"
                        });
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagRelations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8fe329e-9903-4aa8-8f70-513699efb201"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9534),
                            CreatedBy = new Guid("727f1875-2b10-45f9-a155-224aafbf3a9f"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9526),
                            ModifiedBy = new Guid("89799ffb-7000-4f62-8465-74186063e27d"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "corporate-customer"
                        },
                        new
                        {
                            Id = new Guid("447cacd1-8ff4-497b-a42c-ee7bd3953ed9"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9572),
                            CreatedBy = new Guid("52f79f83-2047-4d73-944f-de3776990d9d"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9570),
                            ModifiedBy = new Guid("f33129f7-f254-4c1d-87d3-bae68edee87b"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("cd5fdc94-de20-46fc-9fa1-8c4f7ff0116c"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9608),
                            CreatedBy = new Guid("e8eb7be8-7fc3-4ae8-8d43-5f740b559b7c"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9606),
                            ModifiedBy = new Guid("e721f825-795c-4e8f-8693-68871e5c2a3c"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner"
                        },
                        new
                        {
                            Id = new Guid("cff7ffbf-e61f-4b7c-9171-93feede1b01b"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9644),
                            CreatedBy = new Guid("c290933a-cb80-4271-bb59-c2c85d9a35ea"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9642),
                            ModifiedBy = new Guid("1c463fe0-4811-4a63-aea0-d2ae94b6b3ec"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("f24d10bc-49dd-4740-962e-7bf4226fc329"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9675),
                            CreatedBy = new Guid("e946aa03-ab6a-4904-a90a-8fcdfd32d5c7"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9673),
                            ModifiedBy = new Guid("e17c2e3f-b017-478c-8448-3c30099f5adb"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("beea6721-35ee-4bb8-93a8-e93666c553b9"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9709),
                            CreatedBy = new Guid("022011e5-3917-4d4a-8d06-a9d7f41c8b93"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9706),
                            ModifiedBy = new Guid("e69abd40-ab87-4960-9f33-3292ab8c2dc2"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-bank-turkey"
                        },
                        new
                        {
                            Id = new Guid("c685b526-4d80-403a-a527-3d7b488835c0"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9836),
                            CreatedBy = new Guid("9fa5e09a-79ce-4154-a1f7-e705f27fa137"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9829),
                            ModifiedBy = new Guid("b706ba7a-e56c-4276-a5b4-b8246acce4ad"),
                            OwnerName = "retail-loan",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("0f8267d4-7163-4a1c-a78c-aa3764e18d25"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9866),
                            CreatedBy = new Guid("aa1da4b2-dc90-4380-9828-f86160082a97"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9864),
                            ModifiedBy = new Guid("0497f47b-7443-437a-8a80-00a85b7ce900"),
                            OwnerName = "retail-loan",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            TagName = "loan-partner"
                        });
                });

            modelBuilder.Entity("View", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("ViewTemplateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("Views");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2bdebb20-26c1-4645-bedf-9040e9f0c629"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9760),
                            CreatedBy = new Guid("92857083-1d50-482f-844e-a0d476467e81"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9759),
                            ModifiedBy = new Guid("808cb08c-2125-4556-9b25-321f118655d6"),
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer",
                            Type = 1,
                            ViewTemplateName = "retail-customer-mini-html"
                        },
                        new
                        {
                            Id = new Guid("722c7e8b-da74-4ef7-8096-1547412c7d48"),
                            CreatedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9801),
                            CreatedBy = new Guid("c3dc6426-bf58-4244-bc58-fe612ecb49d4"),
                            ModifiedAt = new DateTime(2023, 6, 13, 11, 40, 24, 574, DateTimeKind.Utc).AddTicks(9799),
                            ModifiedBy = new Guid("7e2300a7-8a5f-4ef3-81b4-13bb48ec91db"),
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer",
                            Type = 2,
                            ViewTemplateName = "retail-customer-flutter"
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.HasOne("Domain", "Domain")
                        .WithMany("Entities")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.HasOne("Entity", "Entity")
                        .WithMany("Data")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.HasOne("EntityData", "EntityData")
                        .WithMany("Sources")
                        .HasForeignKey("EntityDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityData");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.HasOne("Tag", "Tag")
                        .WithMany("TagsRelations")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("View", b =>
                {
                    b.HasOne("Tag", "Tag")
                        .WithMany("Views")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Domain", b =>
                {
                    b.Navigation("Entities");
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Navigation("Data");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Navigation("Sources");
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Navigation("TagsRelations");

                    b.Navigation("Views");
                });
#pragma warning restore 612, 618
        }
    }
}
