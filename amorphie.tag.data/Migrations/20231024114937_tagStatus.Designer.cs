// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.tag.data;

#nullable disable

namespace amorphie.tag.data.Migrations
{
    [DbContext(typeof(TagDBContext))]
    [Migration("20231024114937_tagStatus")]
    partial class tagStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Domains");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1760),
                            CreatedBy = new Guid("965e0e28-8f6a-4ff8-b930-aec9f7bac374"),
                            Description = "Identity Management Platform",
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1760),
                            ModifiedBy = new Guid("177ac5a9-d520-45b2-a4ab-a01935b50035"),
                            Name = "idm"
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("DomainId")
                        .HasColumnType("uuid");

                    b.Property<string>("DomainName")
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DomainId");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = new Guid("cc8668f9-a0d9-438c-b062-95bae429393e"),
                            Description = "User repository",
                            DomainId = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1790),
                            ModifiedBy = new Guid("672fefd5-f7db-4010-93b0-653c140317bb"),
                            Name = "user"
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44710"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = new Guid("ca9da072-7b14-40ad-92ad-31192cb24462"),
                            Description = "Scope repository",
                            DomainId = new Guid("107f4644-57cd-46ff-80de-004c6cd44712"),
                            DomainName = "idm",
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = new Guid("2b7e7c34-876a-44fb-93ec-1bea6a40607a"),
                            Name = "scope"
                        });
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Field")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("EntityData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1820),
                            CreatedBy = new Guid("02d79699-def7-4356-892c-f70f1475795a"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            EntityName = "user",
                            Field = "firstname",
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1810),
                            ModifiedBy = new Guid("bddc3771-2af2-411c-b209-1eaace1a6cc1")
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44722"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1830),
                            CreatedBy = new Guid("6def6862-ae70-4b0a-8731-b888352c558d"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44715"),
                            EntityName = "user",
                            Field = "lastname",
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1830),
                            ModifiedBy = new Guid("f07698ab-b413-4256-95d1-a204de7a11e2")
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44755"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1840),
                            CreatedBy = new Guid("e312909b-400b-46f9-800b-cb168f6f06db"),
                            EntityId = new Guid("107f4644-57cd-46ff-80de-004c6cd44710"),
                            EntityName = "scope",
                            Field = "title",
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1840),
                            ModifiedBy = new Guid("1c0957f2-8921-45ac-b9bd-859f2b142e48")
                        });
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("DataPath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("EntityDataId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EntityDataId");

                    b.HasIndex("TagId");

                    b.ToTable("EntityDataSource");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea11c428-467c-4706-96d0-6065b6019fa0"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1860),
                            CreatedBy = new Guid("d45cfc70-cf4d-4374-b8f0-43dd7ddefc12"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1860),
                            ModifiedBy = new Guid("134cfc14-a0d2-42cc-a6ed-d6b8282f66c6"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("9faf5ca6-ec6b-4888-bdcf-20cc71714d10"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1880),
                            CreatedBy = new Guid("81753147-b950-4733-8f2a-6f30e25d2351"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1870),
                            ModifiedBy = new Guid("6281cad9-580a-44e9-a0cd-5c2e34044662"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("09eeb1b1-3948-4078-995d-4d775633a6f3"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1890),
                            CreatedBy = new Guid("11c6259d-a482-4c7b-ac95-b9e4af54138f"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1890),
                            ModifiedBy = new Guid("6730bd5d-f284-405b-af20-b2a0c7c14f12"),
                            Order = 3,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("68809d09-83a4-48a6-bdec-d20fcd858b2b"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = new Guid("41a992f7-454b-4c38-a23e-4d523d623e71"),
                            DataPath = "$.lastname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = new Guid("e818aef7-5d5c-479d-a2ac-37e00e858d38"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("a8b3afcf-2991-4363-a6b9-c9ab26f0cde2"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = new Guid("ff666524-5e75-4cf2-a039-1da69adad5b5"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = new Guid("bdd755f4-80a4-49e1-8481-1b32b0a5757e"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("d70ceb8f-717a-49b9-aaa9-b66c6a51c6e7"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1940),
                            CreatedBy = new Guid("90d2da22-a488-4057-b6a3-45a9b042a505"),
                            DataPath = "$.lastname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1930),
                            ModifiedBy = new Guid("0d7af6fc-1871-432c-ac67-9dbe9ab3df1d"),
                            Order = 3,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("318cc749-2dbe-43de-afb2-a1ef18e836a3"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1950),
                            CreatedBy = new Guid("cfc30ce5-5209-4bf0-ac3b-138fff8276ee"),
                            DataPath = "$.firstname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1950),
                            ModifiedBy = new Guid("9b2aec49-a0f3-42ab-91d2-4895946a15ac"),
                            Order = 1,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("3f79b824-067a-42c4-a594-a64567d19025"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1960),
                            CreatedBy = new Guid("5c3e62c6-bed1-4022-a4d2-dfbb58faa9c2"),
                            DataPath = "$.partner-staff.fullname",
                            EntityDataId = new Guid("107f4644-57cd-46ff-80de-004c6cd44734"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1960),
                            ModifiedBy = new Guid("70bc5971-cb80-4685-a390-3c4f03f7a7ae"),
                            Order = 2,
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        });
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int?>("Ttl")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1460),
                            CreatedBy = new Guid("9b63372d-7f79-4719-8e3e-f0b0149ca076"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1460),
                            ModifiedBy = new Guid("63b5aef5-0265-49fe-a2c9-671b4964dc19"),
                            Name = "retail-loan"
                        },
                        new
                        {
                            Id = new Guid("26a18f7b-8198-4bf1-9661-2c1dc80c2fb1"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1500),
                            CreatedBy = new Guid("7a314d44-291c-4357-9772-59b83b262a9b"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1500),
                            ModifiedBy = new Guid("1130c028-4743-4dc4-b126-32e6eb154990"),
                            Name = "idm"
                        },
                        new
                        {
                            Id = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1520),
                            CreatedBy = new Guid("0d9cc6b6-6de3-43f0-9fb5-15a2ca53f973"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1510),
                            ModifiedBy = new Guid("39d4d84d-88bb-44cc-b63a-4769ab100be8"),
                            Name = "retail-customer",
                            Ttl = 5,
                            Url = "http://localhost:3000/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Id = new Guid("d7425487-a927-4164-a667-19c8efdbec1b"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1530),
                            CreatedBy = new Guid("d0ecbc2c-7816-4524-b9db-9067545917c9"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1530),
                            ModifiedBy = new Guid("33a261e8-b4e7-471b-b6f0-e635fb544320"),
                            Name = "corporate-customer",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.customers?reference=@reference"
                        },
                        new
                        {
                            Id = new Guid("6061ebdc-8fe4-4a0c-a0b2-e9f6baa18709"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1550),
                            CreatedBy = new Guid("6f1b1514-d78d-42fb-a8a6-e88ac0652262"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1540),
                            ModifiedBy = new Guid("0fc8a03f-f20a-4922-a4b3-c52c27087a6e"),
                            Name = "loan-partner",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.partner/@reference"
                        },
                        new
                        {
                            Id = new Guid("980d4716-3fd5-401a-aec8-e409f23c528f"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1560),
                            CreatedBy = new Guid("aec4e771-d87a-4624-b8b5-dbf04c8a649c"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1560),
                            ModifiedBy = new Guid("6052e0b0-68db-4e1b-b2a6-16c6dbc4be74"),
                            Name = "loan-partner-staff",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.partner/@partner/staff/@reference"
                        },
                        new
                        {
                            Id = new Guid("e212dddc-8f93-4425-93dc-73a9b6f8672d"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1580),
                            CreatedBy = new Guid("3c03b700-8b55-4668-996f-66c48cdb18ec"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1570),
                            ModifiedBy = new Guid("f6208b3a-7831-4985-91ba-88380083fc6d"),
                            Name = "burgan-staff",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.staff/@reference"
                        },
                        new
                        {
                            Id = new Guid("2d773ae4-4d0d-40ec-b1f5-595dd9a13d0a"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1590),
                            CreatedBy = new Guid("42afdb3f-0210-44af-a3a2-dc58ee964c26"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1590),
                            ModifiedBy = new Guid("6c37bcee-cc2f-4552-943c-74b4bd972944"),
                            Name = "burgan-bank-turkey",
                            Ttl = 10,
                            Url = "http://localhost:3000/cb.bankInfo"
                        });
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("TagRelations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af8229f1-02ac-475e-833e-4ee989cf18bf"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1600),
                            CreatedBy = new Guid("b583b918-fa70-422c-83a8-9441a89f6873"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1600),
                            ModifiedBy = new Guid("2709e045-f458-4d2a-9509-0742934dffe9"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "corporate-customer"
                        },
                        new
                        {
                            Id = new Guid("fdebc769-52ce-4716-80e5-c386e857079a"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1620),
                            CreatedBy = new Guid("9b92b1d7-638a-4d8e-a6e9-1f9d15000f1c"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1620),
                            ModifiedBy = new Guid("98bb4af8-2f05-49b8-bdd7-93a415a6f905"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("2afcaea3-deab-4b52-8deb-dcc11c15bf3e"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1640),
                            CreatedBy = new Guid("7ef6de76-ade6-49fe-a4e0-ce859e288a26"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1640),
                            ModifiedBy = new Guid("efee7a40-673a-4398-8e45-049d18ae1b96"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner"
                        },
                        new
                        {
                            Id = new Guid("a9417fdf-6cf7-4307-8a1b-b0cd3dae1acb"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1650),
                            CreatedBy = new Guid("3e1dd27a-2e27-43e3-b67d-de202c727feb"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1650),
                            ModifiedBy = new Guid("ef6a77a4-e9fe-4535-acc7-88c035cd99c6"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "loan-partner-staff"
                        },
                        new
                        {
                            Id = new Guid("7bd7a975-3a12-4f6a-b27c-d6f28784ab46"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1670),
                            CreatedBy = new Guid("5c9e2e28-e7f3-4cb4-91e7-f3ff3d2bb8bd"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1670),
                            ModifiedBy = new Guid("570c1c48-6bc6-445c-82f5-b7029f6dd7e4"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-staff"
                        },
                        new
                        {
                            Id = new Guid("edc4f8da-4538-49ed-90bd-5967a46e0e42"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1680),
                            CreatedBy = new Guid("d8ede3a7-cc66-424c-bf76-d306a41bc81e"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1680),
                            ModifiedBy = new Guid("7a8dbcdd-e00b-4932-97ab-f917ac0e56fb"),
                            OwnerName = "idm",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "burgan-bank-turkey"
                        },
                        new
                        {
                            Id = new Guid("aea66ffc-e68a-4283-92bd-6f2745208e4d"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1730),
                            CreatedBy = new Guid("147062bc-7eb6-45c0-911b-3e2a8942e066"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1730),
                            ModifiedBy = new Guid("a148ae2c-b867-4b53-abf9-c10f0d56ad5e"),
                            OwnerName = "retail-loan",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            TagName = "retail-customer"
                        },
                        new
                        {
                            Id = new Guid("d03f7d22-fdc7-4681-a597-0a9e9af7b69c"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1750),
                            CreatedBy = new Guid("e7c6a7bf-9e27-4617-bc76-0ff40e9d58b8"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1740),
                            ModifiedBy = new Guid("a41d55f8-579a-4972-a2dc-c510738de4f2"),
                            OwnerName = "retail-loan",
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44778"),
                            TagName = "loan-partner"
                        });
                });

            modelBuilder.Entity("View", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uuid");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<string>("ViewTemplateName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.ToTable("Views");

                    b.HasData(
                        new
                        {
                            Id = new Guid("82cd8416-2d04-4b5e-b9e7-87735155267b"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1700),
                            CreatedBy = new Guid("0af7a3a2-1168-4861-b275-5d81f564fbbd"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1700),
                            ModifiedBy = new Guid("129aedc4-e8ae-4d4d-aca0-56e1502562c3"),
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer",
                            Type = 1,
                            ViewTemplateName = "retail-customer-mini-html"
                        },
                        new
                        {
                            Id = new Guid("822465bf-8361-4851-8c09-a124cf67af20"),
                            CreatedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1720),
                            CreatedBy = new Guid("4dd19e4d-0414-4b8c-bd5e-92d44ae5a7fc"),
                            ModifiedAt = new DateTime(2023, 10, 24, 11, 49, 37, 314, DateTimeKind.Utc).AddTicks(1710),
                            ModifiedBy = new Guid("6f38cde0-1809-4b28-90fe-5175de8b5e37"),
                            TagId = new Guid("107f4644-57cd-46ff-80de-004c6cd44756"),
                            TagName = "retail-customer",
                            Type = 2,
                            ViewTemplateName = "retail-customer-flutter"
                        });
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.HasOne("Domain", "Domain")
                        .WithMany("Entities")
                        .HasForeignKey("DomainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domain");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.HasOne("Entity", "Entity")
                        .WithMany("EntityData")
                        .HasForeignKey("EntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");
                });

            modelBuilder.Entity("EntityDataSource", b =>
                {
                    b.HasOne("EntityData", "EntityData")
                        .WithMany("Sources")
                        .HasForeignKey("EntityDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EntityData");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("TagRelation", b =>
                {
                    b.HasOne("Tag", "Tag")
                        .WithMany("TagsRelations")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("View", b =>
                {
                    b.HasOne("Tag", "Tag")
                        .WithMany("Views")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Domain", b =>
                {
                    b.Navigation("Entities");
                });

            modelBuilder.Entity("Entity", b =>
                {
                    b.Navigation("EntityData");
                });

            modelBuilder.Entity("EntityData", b =>
                {
                    b.Navigation("Sources");
                });

            modelBuilder.Entity("Tag", b =>
                {
                    b.Navigation("TagsRelations");

                    b.Navigation("Views");
                });
#pragma warning restore 612, 618
        }
    }
}
